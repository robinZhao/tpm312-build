package com.example.dts;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

public class clockParser {
    private static String clocks = "0x08 0xc0 0x08 0xc2 0x08 0x1c2 0x08 0x4c 0x08 0xf0 0x08 0xcd 0x08 0x1cd 0x08 0x9f 0x08 0x9e 0x08 0xf4 0x08 0xbe 0x08 0xc9 0x08 0x186 0x08 0xd5 0x08 0x88 0x08 0x87 0x08 0x08  0x08 0x09  0x08 0x06  0x08 0xd0 0x08 0x05  0x08 0xc0 0x08 0x1c0 0x08 0x140 0x08 0xc2 0x08 0x1c1 0x08 0x142 0x08 0x1c2 0x08 0x143 0x08 0x41 0x08 0x42 0x08 0x43 0x08 0x44 0x08 0x45 0x08 0x46 0x08 0x47 0x08 0x48 0x08 0x49 0x08 0x4a 0x08 0x4b 0x08 0xfa 0x08 0xe5 0x08 0xe6 0x08 0x6b  0x08 0x6c  0x08 0x16a 0x08 0xde  0x08 0xe3  0x08 0x1cd 0x08 0x85 0x08 0x86 0x08 0x4e 0x08 0xf0 0x08 0xcd  0x08 0xe1  0x08 0xdc  0x08 0x6d  0x08 0xed  0x08 0xeb  0x08 0x178 0x08 0xd5 0x08 0x9f  0x08 0x9e  0x08 0xf4  0x08 0xbe  0x08 0xc9  0x08 0x186 0x08 0x88 0x08 0x87 0x08 0xd9 0x08 0x1d9 0x08 0xdb 0x08 0x1db";
    private static String  rates = "0x47868c0 0x2faf080 0x2faf080  0x2faf080 0x2faf080 0x5f5e100 0x2faf080  0x8f0d180 0x8f0d180 0x8f0d180 0x2faf080 0x8f0d180 0x2faf080  0x5f5e100 0x47868c0 0x47868c0 0x30a32c00 0x30a32c00 0x23c34600 0xbebc200 0x2faf0800 0x8f0d180 0x47868c0   0x23c3460 0x11e1a300 0x5f5e100 0x2faf080  0x5f5e100  0x2faf080  0x5f5e100 0x5f5e100 0x5f5e100 0x5f5e100 0x5f5e100 0x5f5e100 0x2faf080 0x2faf080 0x2faf080 0x2faf080 0x2faf080 0xbebc200 0x17d78400 0x17d78400 0x5f5e100 0x5f5e100 0x5f5e100  0x17d78400 0x17d78400 0xbebc200  0x5f5e100 0xbebc200 0xbebc200 0x5f5e100 0x17d78400 0x17d78400 0x17d78400 0x17d78400 0x11e1a300 0x17d78400 0xbebc200 0x17d78400 0x11e1a300 0x11e1a300 0x11e1a300 0x11e1a300 0x23c34600 0x5f5e100  0x8f0d180 0x8f0d180 0x17d78400 0x5f5e100 0x17d78400 0x5f5e100";
    
    public static void main(String[] args) {
        String[] clockArr = clocks.split("\\s+");
        System.out.println(clockArr.length);
        String[] ratesArr = rates.split("\\s+");
        System.out.println(ratesArr.length);
        Map<String,List<Integer>> m = new HashMap<String,List<Integer>>();;
        for(int i=0;i<ratesArr.length;i++){
           
            m.put(clockArr[2*i+1], new ArrayList<>());
        }
        for(int i=0;i<ratesArr.length;i++){
            m.get(clockArr[2*i+1]).add(Integer.parseInt(ratesArr[i].substring(2),16));
        }
        Iterator<Entry<String, List<Integer>>> iter = m.entrySet().iterator();
        while(iter.hasNext()){
            Map.Entry<String,List<Integer>> entry=iter.next();
            entry.getValue().sort(new Comparator<Integer>() {
                @Override
                public int compare(Integer o1, Integer o2) {
                    return o2-o1;
                }
            });
            System.out.print(" 0x08 "+entry.getKey());
        }
        iter = m.entrySet().iterator();
        System.out.println();
        while(iter.hasNext()){
            Map.Entry<String,List<Integer>> entry=iter.next();
            System.out.print(" 0x"+Integer.toHexString(entry.getValue().get(0)));
        }
        System.out.println();
        System.out.print(m.size());

    }
}
